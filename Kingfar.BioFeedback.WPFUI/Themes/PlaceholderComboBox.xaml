<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Kingfar.BioFeedback.WPFUI.Converters"
                    xmlns:controls="clr-namespace:Wpf.Ui.Controls;assembly=Wpf.Ui"
                    xmlns:local="clr-namespace:Kingfar.BioFeedback.WPFUI.Controls">

    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

    
    <Style x:Key="DefaultPlaceholderComboBoxStyle" TargetType="{x:Type local:PlaceholderComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <!--  WPF doesn't like centering, the animation is ugly and the mouse button sometimes clicks right away.  -->
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Height" Value="36" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PlaceholderComboBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            x:Name="ContentBorder"
                            Grid.Row="0"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <!--
                                    Funky grid - because:
                                    Chevron is over Presenter, ToggleButton is over Chevron, TextBox is over ToggleButton.
                                    But, TextBox is not over Chevron, so ToggleButton still works.
                                -->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}" >
                                        <ContentPresenter
                                            Name="PART_ContentPresenter"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            IsHitTestVisible="False"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                        <TextBlock
                                            x:Name="PlaceholderTextBox"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Visibility="{Binding Path=SelectionBoxItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}"
                                            Text="{TemplateBinding PlaceholderText}">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{DynamicResource TextPlaceholderColor}" />
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </Grid>
                                    <Grid Grid.Column="1" Margin="{StaticResource ComboBoxChevronMargin}">
                                        <controls:SymbolIcon
                                            x:Name="ChevronIcon"
                                            Margin="0"
                                            VerticalAlignment="Center"
                                            FontSize="{StaticResource ComboBoxChevronSize}"
                                            RenderTransformOrigin="0.5, 0.5"
                                            Symbol="ChevronDown24">
                                            <controls:SymbolIcon.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </controls:SymbolIcon.RenderTransform>
                                            <controls:SymbolIcon.Foreground>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
                                            </controls:SymbolIcon.Foreground>
                                        </controls:SymbolIcon>
                                    </Grid>
                                    <Grid
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="0">
                                        <ToggleButton Height="36"
                                            Name="ToggleButton"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            ClickMode="Press"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />
                                    </Grid>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <controls:TextBox
                                            x:Name="PART_EditableTextBox"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            PlaceholderText="你好"
                                            Style="{StaticResource DefaultComboBoxTextBoxStyle}" />
                                    </Grid>
                                </Grid>
                                <Popup
                                    x:Name="Popup"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    VerticalAlignment="Center"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="{TemplateBinding Popup.Placement}"
                                    PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                                    VerticalOffset="1">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Margin="0"
                                        Padding="0,4,0,6"
                                        BorderBrush="{DynamicResource SurfaceStrokeColorFlyoutBrush}"
                                        BorderThickness="1"
                                        CornerRadius="{DynamicResource PopupCornerRadius}"
                                        SnapsToDevicePixels="True">
                                        <Border.RenderTransform>
                                            <TranslateTransform />
                                        </Border.RenderTransform>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource SolidBackgroundFillColorTertiary}" />
                                        </Border.Background>
                                        <Grid>
                                            <controls:DynamicScrollViewer
                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                Margin="0"
                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                SnapsToDevicePixels="True"
                                                TextElement.FontSize="{TemplateBinding FontSize}"
                                                TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                TextElement.Foreground="{TemplateBinding Foreground}"
                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <StackPanel
                                                    IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    TextElement.FontSize="{TemplateBinding FontSize}" />
                                            </controls:DynamicScrollViewer>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderThickness="{StaticResource ComboBoxAccentBorderThemeThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Visibility="Collapsed">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(controls:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="180"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="DropDownBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                            From="-90"
                                            To="0"
                                            Duration="00:00:00.167">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(controls:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="{StaticResource ComboBoxPopupMinHeight}" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorInputActive}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AccentBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultPlaceholderComboBoxStyle}" TargetType="{x:Type local:PlaceholderComboBox}" />
</ResourceDictionary>